#include <stdio.h>
#include <string.h>

#define _XOPEN_SOURCE
#include <unistd.h>

char *crypt(const char *key, const char *salt);
char dicitionary(char *salt);

int main(int argc, char *argv[])
{
	// Check to make sure there's only one argument given
	if (argc != 2)
	{
		printf("**Error: Invalid number of arguments entered.\n");
		printf("\tPlease enter only one argument.\n");
		return 1;
	}

	// Point to the encrypted string, create the salt 
	char *encryption = argv[1];
	char salt[2];
	
	// Grab the salt from the encrypted string
	salt[0] = encryption[0];
	salt[1] = encryption[1];

	// Create the length, create the decrypted string variable, and a counter
	unsigned length = strlen(argv[1]);
	register int i;
	char decrypted[length];

	strcpy(decrypted, crypt("12345", salt));
	if (strcmp(decrypted, argv[1]) == 0)
	{
		dictionary(salt);
	}
	
	return 0;
}

void dictionary(char *salt)
{
	FILE *dict;
	dict=fopen("/usr/share/dict/words", "r");
	char *line = NULL;
	size_t len = 0;
	ssize_t = read;
	
	while ((read = getline(&line, &len, dict)) != -1)
	{
		printf("%s", line);
	} 

	fclose(dict);
}
